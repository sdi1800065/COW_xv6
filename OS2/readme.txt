Sdi1800065	Kαρακόλης Ιωάννης

Όσο αναφορά την τεκμηρίωση δεν υπάρχουν πολλά που μπορώ να αναφέρω για την συγκεκριμένη εργασία
καθώς ο κώδικας είναι αρκετά αυστηρός και δεν αφήνει πολύ χώρο σε σχεδιάστηκες επιλογές.

Με βάση λοιπόν τις υποδείξεις , παρακάτω παρουσιάζετε η υλοποίηση :

1)Τροποποιήθηκε η uvmcopy() ώστε να αντιστοιχίζει τις φυσικές σελίδες μνήμης του γονέα στο παιδί, αντί να αναθέτει νέες σελίδες.
Μηδενίστηκε το flag PTE_W στις PTE και του γονέα και του παιδιού καθώς και καταγράφηκε για κάθε PTE αν είναι αντιστοίχιση CoW.
Το τελευταίο έγινε χρησιμοποιώντας τα bits RSW (reserved for software) στις PTE του RISC-V (#define PTE_RSW (1L << 8)) και εγκαθιστώντας
τα PTE_RSW bit ισα με 1.

2)Τροποποιήθηκε η usertrap() για να αναγνωρίζει σφάλματα σελίδας(r_scause() == 15). 
Όταν συμβαίνει ένα σφάλμα σελίδας σε μία σελίδα CoW (αφού έχουν γίνει οι κατάλληλοι έλεγχοι και το πρόγραμμα δεν πρέπει να τερματίσει),
ανατίθεται μία νέα σελίδα μέσω της kalloc() και αντιγράφεται η παλιά σελίδα στη νέα (memmove(mem, (char *)pa, PGSIZE);).
Ακόμα εγκαθιστάτε η νέα σελίδα στην PTE με το PTE_W bit ίσο με 1 και με τα PTE_RSW bits ίσα με 0.

Ο κώδικας μέχρι στιγμής είναι ίδιος με αυτόν που παρουσιάστηκε ως αρχή στο φροντιστήριο , εμπλουτισμένος με όσα αναφέρθηκαν
και όσα θα αναφερθούν.

3)Οι φυσικές σελίδες απελευθερώνονται μόνο όταν μηδενίζονται οι αναφορές σε αυτή από PTE.
Ορίζετε ένας μετρητής αναφορών για κάθε φυσική σελίδα,
όπου μετρώνται οι πίνακες σελίδων που αναφέρονται σε αυτή τη σελίδα. 
Όταν ανατίθεται αρχικά μία σελίδα μέσω της kalloc(),ο μετρητής αναφορών αρχικοποιείται στην τιμή 1.
Ο μετρητής αυξάνετε στο τέλος της uvmcopy (μέσω της void inc_ref_counter(uint64 pa, int i)) 
όταν δηλαδή η fork() δημιουργεί ένα παιδί που μοιράζεται τη σελίδα,
και μειώνετε όταν μία διεργασία αφαιρεί τη σελίδα από τον πίνακα σελίδων της μέσω της kfree().
Η kfree()  επιστρέφει τη σελίδα στη λίστα με τις διαθέσιμες σελίδες
μόνο όταν ο μετρητής μειωθεί στο 0 διαφορετικά άπλα μειώνει τον μετρητή της σελίδας. 
Χρησιμοποιείτε ένας πίνακας ακεραίων για την αποθήκευση των μετρητών με μέγεθος ίσο 
με τον συνολικό αριθμό των φυσικών σελίδων στο σύστημα (int reference_counter_matrix[PHYSTOP / PGSIZE];).

4)Τροποποιήθηκε η copyout() ώστε να χρησιμοποιεί τον ίδιο μηχανισμό όπως τα σφάλματα σελίδας όταν συναντά μία σελίδα CoW.

Τέλος πρέπει να αναφερθεί ότι ο πινάκας reference_counter_matrix αρχικοποιείται στην τιμή 1 
και στην freerange ώστε να γίνει σωστά η εκτέλεση της kfree() που ακολουθεί .

